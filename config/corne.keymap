/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LINUX  0
#define SYM    1
#define NAV    2
#define media  3

#define LTSS   &lt SYM SPACE
#define LTNE   &lt NAV ESC

#define XXX &none

#define HRML(k1,k2,k3,k4) &ht LSHIFT k1 &ht LCTRL k2 &ht LALT  k3 &ht LMETA  k4
#define HRMR(k1,k2,k3,k4) &ht RMETA  k1 &ht RALT  k2 &ht RCTRL k3 &ht RSHIFT k4

/ {
// -----------------------------------------------------------------------------------------
        behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

// -----------------------------------------------------------------------------------------
        combos_esc {
// -----------------------------------------------------------------------------------------
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
    };

// -----------------------------------------------------------------------------------------
        keymap {
                compatible = "zmk,keymap";

// -----------------------------------------------------------------------------------------
                linux_layer {
// -----------------------------------------------------------------------------------------
                        label = "LINUX";
                        bindings = <
//      ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//      │  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
   XXX    &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P       XXX
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ' "     │
   XXX   HRML(A,      S,         D,         F)         &kp G         &kp H      HRMR(J,     K,         L,         APOS)      XXX
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │  , <     │  . >     │  / ?     │
   XXX    &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH    XXX
//      ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
//                    ╭─────────────┬─────────────┬────────────╮   ╭────────────┬──────────────┬─────────────╮
//                    │    TAB      │  SPACE/SYM  │   ESC/NAV  │   │    RET     │    BSPC      │    DEL      │
                          &kp TAB       LTSS           LTNE            &kp RET      &kp BSPC       &kp DEL
//                    ╰─────────────┴─────────────┴────────────╯   ╰────────────┴──────────────┴─────────────╯
                        >;
                };

// -----------------------------------------------------------------------------------------
                sym_layer {
// -----------------------------------------------------------------------------------------
                        label = "SYM";
                        bindings = <
//      ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//      │  X       │  X       │  X       │  X       │  X       │   │   [ {    │   7 &    │   8 *    │   9 (    │   ] }    │
   XXX    XXX         XXX        XXX        XXX        XXX          &kp LBKT    &kp N7     &kp N8     &kp N9     &kp RBKT    XXX
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  X       │  X       │  X       │  X       │  X       │   │   = +    │   4 $    │   5 %    │   6 ^    │  ; :     │
   XXX   &kp LSHIFT &kp LCTRL  &kp LALT   &kp LMETA   XXX           &kp EQUAL   &kp N4     &kp N5     &kp N6     &kp SEMI    XXX 
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  X       │  X       │  X       │  X       │  X       │   │    \ |   │   1 !    │   2 @    │   3 #    │   ` ~    │
   XXX    XXX         XXX        XXX        XXX        XXX           &kp BSLH   &kp N1     &kp N2      &kp N3    &kp GRAVE   XXX
//      ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
//                    ╭─────────────┬─────────────┬────────────╮   ╭────────────┬──────────────┬─────────────╮
//                    │      X      │  SPACE/SYM  │     X      │   │    _ -     │    0 )       │    (        │
                            XXX         LTSS           XXX            &kp MINUS     &kp N0       &kp LPAR
//                    ╰─────────────┴─────────────┴────────────╯   ╰────────────┴──────────────┴─────────────╯
                        >;
                };

// -----------------------------------------------------------------------------------------
                nav_layer {
// -----------------------------------------------------------------------------------------
                        label = "NAV";
                        bindings = <
//      ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//      │  X       │  X       │  X       │  X       │  X       │   │  REDO    │  PASTE   │  COPY    │  CUT     │  UNDO    │
   XXX    XXX         XXX        XXX        XXX        XXX          &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO   XXX
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  X       │  X       │  X       │  X       │  X       │   │  LEFT    │  DOWN    │    UP    │  RIGHT   │  CAPS    │
   XXX   &kp LSHIFT &kp LCTRL  &kp LALT   &kp LMETA   XXX           &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT  &kp CAPS    XXX 
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  X       │  X       │  X       │  X       │  X       │   │  HOME    │  PG_UP   │  PG_DN   │  END     │  INS     │
   XXX    XXX         XXX        XXX        XXX        XXX           &kp HOME   &kp PG_UP  &kp PG_DN   &kp END    &kp INS    XXX
//      ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
//                    ╭─────────────┬─────────────┬────────────╮   ╭────────────┬──────────────┬─────────────╮
//                    │      X      │      X      │   ESC/NAV  │   │   RET     │    BSPC      │    DEL       │
                            XXX           XXX          LTNE           &kp RET      &kp BSPC       &kp DEL
//                    ╰─────────────┴─────────────┴────────────╯   ╰────────────┴──────────────┴─────────────╯
                        >;
                };

// -----------------------------------------------------------------------------------------
                media_layer {
// -----------------------------------------------------------------------------------------
                        label = "MEDIA";
                        bindings = <
//      ╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
//      │  X       │  X       │  X       │  X       │  X       │   │  REDO    │  PASTE   │  COPY    │  CUT     │  UNDO    │
   XXX    XXX         XXX        XXX        XXX        XXX          &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO   XXX
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  X       │  X       │  X       │  X       │  X       │   │  LEFT    │  DOWN    │    UP    │  RIGHT   │  CAPS    │
   XXX   &kp LSHIFT &kp LCTRL  &kp LALT   &kp LMETA   XXX           &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT  &kp CAPS    XXX 
//      ├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
//      │  X       │  X       │  X       │  X       │  X       │   │  HOME    │  PG_UP   │  PG_DN   │  END     │  INS     │
   XXX    XXX         XXX        XXX        XXX        XXX           &kp HOME   &kp PG_UP  &kp PG_DN   &kp END    &kp INS    XXX
//      ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
//                    ╭─────────────┬─────────────┬────────────╮   ╭────────────┬──────────────┬─────────────╮
//                    │      X      │      X      │   ESC/NAV  │   │   RET     │    BSPC      │    DEL       │
                            XXX           XXX          LTNE           &kp RET      &kp BSPC       &kp DEL
//                    ╰─────────────┴─────────────┴────────────╯   ╰────────────┴──────────────┴─────────────╯
                        >;
                };
// -----------------------------------------------------------------------------------------
        };
};
